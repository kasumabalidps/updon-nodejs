<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>File Upload Portal</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css">
  <style>
    body {
      background-color: #f7f7f7;
      font-family: 'Poppins', sans-serif;
    }
    .navbar-custom {
      background: linear-gradient(45deg, #007bff, #00dbde);
      color: white;
    }
    .navbar-custom .navbar-brand, .navbar-custom .nav-link {
      color: white;
    }
    .navbar-custom .nav-link:hover, .navbar-custom .nav-item.active .nav-link {
      color: #ffc107;
    }
    .btn-text-auth {
      color: white;
      background-color: transparent;
      border: none;
      transition: color 0.3s;
    }
    .btn-text-auth:hover {
      color: #ffc107;
      text-decoration: underline;
    }
    .container {
      background: white;
      padding: 30px;
      border-radius: 15px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.05);
      margin-top: 20px;
    }
    .drag-area {
      background-color: #ffffff;
      border: 3px dashed #007bff;
      border-radius: 10px;
      width: 100%;
      height: 250px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      text-align: center;
      margin-bottom: 15px;
      transition: background-color 0.3s;
    }
    .drag-area.active {
      background-color: #e9f5ff;
      animation: wiggle 0.2s ease infinite;
    }
    .drag-area:hover {
      cursor: pointer;
    }
    .icon {
      font-size: 48px;
      color: #007bff;
      margin-bottom: 10px;
    }
    .btn-custom {
      color: white;
      background-color: #007bff;
      border-color: #007bff;
    }
    .btn-custom:hover {
      background-color: #0056b3;
      border-color: #0056b3;
    }
    .progress {
      height: 25px;
      display: none;
      margin-bottom: 20px;
    }
    .progress-bar {
      width: 0%;
      transition: width 0.4s ease;
    }
    #file-chosen {
      margin-top: 10px;
    }
    @keyframes wiggle {
      0%, 100% { transform: rotate(-3deg); }
      50% { transform: rotate(3deg); }
    }
    .navbar-custom {
    min-height: 48px;
    max-height: 56px;
    }
    .navbar-custom .navbar-brand, .navbar-custom .nav-link {
      padding-top: 0;
      padding-bottom: 0;
      line-height: 48px;
    }
    .navbar-toggler {
      padding: .25rem .75rem;
    }
    .navbar-custom .dropdown-menu a {
      line-height: normal;
      padding: .25rem 1.5rem;
    }
    .navbar {
      padding-top: 100px;
    }
    .nav-item {
      font-weight: 500;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <nav class="navbar navbar-expand-lg navbar-light bg-light navbar-custom">
    <div class="container">
      <a class="navbar-brand" href="/">
        <img src="https://cdn.discordapp.com/attachments/1211835689784836151/1224648115399954443/b7wzVeW.png?ex=661e416f&is=660bcc6f&hm=fc4beb142a03dbb51bf89ad70f15caf2fb1143c66a26757a7c64dcc9e93a164a&" width="40" height="40" class="d-inline-block align-top" alt="Logo">
      </a>
      <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="navbar-nav mr-auto">
          <li class="nav-item">
            <a class="nav-link" href="/">Upload</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/files">List Upload</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/about">About</a>
          </li>
        </ul>
        <div class="navbar-nav">
          <% if(user) { %>
            <li class="nav-item dropdown">
              <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <img src="https://cdn.discordapp.com/attachments/1211835689784836151/1224649818098630676/u9N87X0.png?ex=661e4305&is=660bce05&hm=a626b17726d452ef6f9ef09468d9a99283329a83b6c0060ec8455d0e34c86c79&" alt="" width="40" height="40" class="d-inline-block align-top">
                <%= user.email %>
              </a>
              <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownMenuLink">
                <a class="dropdown-item" href="/logout">Logout</a>
              </div>
            </li>
          <% } else { %>
            <a class="nav-item nav-link btn-text-auth" href="/login"><u>Login</u></a>
            <a class="nav-item nav-link btn-text-auth active" href="/register"><u>Register</u></a>
          <% } %>
        </div>
      </div>
    </div>
  </nav>

  <div class="container">
    <h2 class="text-center mb-4">Register</h2>
    <% if (typeof error !== 'undefined' && error) { %>
      <div id="error-alert" class="alert alert-danger" role="alert">
        <%= error %>
      </div>
    <% } %>
    <div id="alert-error" class="alert alert-danger" style="display: none;">Password and Confirm Password do not match.</div>
    <form id="register-form" action="/register" method="POST">
      <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" class="form-control" id="email" name="email" required>
      </div>
      <div class="form-group">
        <label for="password">Password:</label>
        <input type="password" class="form-control" id="password" name="password" required>
      </div>
      <div class="form-group">
        <label for="confirm-password">Confirm Password:</label>
        <input type="password" class="form-control" id="confirm-password" name="confirmPassword" required>
      </div>
      <button type="submit" class="btn btn-primary btn-block">Register</button>
    </form>
  </div>

  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.2/dist/js/bootstrap.bundle.min.js"></script>
  <script>
document.addEventListener('DOMContentLoaded', function() {
  const fileInput = document.getElementById('fileInput');
  const dragArea = document.getElementById('drag-area');
  const fileChosen = document.getElementById('file-chosen');
  const uploadBtn = document.getElementById('upload-btn');
  const fileList = document.getElementById('file-list');
  const showMoreContainer = document.getElementById('show-more-container');
  const progress = document.querySelector('.progress');
  const progressBar = document.querySelector('.progress-bar');

  var errorAlert = document.getElementById('error-alert');
      if (errorAlert) {
        setTimeout(function() {
          errorAlert.style.display = 'none';
        }, 5000);
      }

  // Menampilkan nama file ketika dipilih
  fileInput.addEventListener('change', function() {
    let fileNames = Array.from(this.files).map(file => file.name).join(', ');
    fileChosen.textContent = fileNames;
  });

  document.getElementById('register-form').addEventListener('submit', function(e) {
    const password = document.getElementById('password').value;
    const confirmPassword = document.getElementById('confirm-password').value;
    const alertError = document.getElementById('alert-error');

    if (password !== confirmPassword) {
      e.preventDefault(); 
      alertError.style.display = 'block'; 
      setTimeout(function() {
        alertError.style.display = 'none'; 
      }, 5000);
    } else {
      alertError.style.display = 'none';
    }
  });

  // Mencegah perilaku default ketika file di-drag over
  dragArea.addEventListener('dragover', function(e) {
    e.preventDefault();
    dragArea.classList.add('active');
  });

  // Menghapus highlight ketika keluar dari area drag
  dragArea.addEventListener('dragleave', function(e) {
    dragArea.classList.remove('active');
  });

  // Menangani file yang didrop
  dragArea.addEventListener('drop', function(e) {
    e.preventDefault();
    dragArea.classList.remove('active');

    // Mendapatkan file dan mengupdate input file
    const files = e.dataTransfer.files;
    if (files.length) {
      fileInput.files = files;
      let fileNames = Array.from(files).map(file => file.name).join(', ');
      fileChosen.textContent = fileNames;
      uploadFiles(files);
    }
  });

  // Fungsi untuk mengunggah file
  function uploadFiles(files) {
  Array.from(files).forEach(file => {
    const formData = new FormData();
    formData.append('file', file);

    const xhr = new XMLHttpRequest();
    xhr.open('POST', '/upload', true);

    // Menampilkan progress bar
    progress.style.display = 'block';
    progressBar.style.width = '0%'; // Reset progress bar untuk setiap file

    xhr.upload.onprogress = function(e) {
      if (e.lengthComputable) {
        const percentComplete = (e.loaded / e.total) * 100;
        progressBar.style.width = percentComplete + '%';
        progressBar.textContent = Math.floor(percentComplete) + '%';
      }
    };

    xhr.onload = function() {
      if (xhr.status === 200) {
        // Sembunyikan progress bar setelah upload selesai
        setTimeout(() => {
          progress.style.display = 'none';
          progressBar.style.width = '0%';
          progressBar.textContent = '0%';
        }, 500); // Tambahkan sedikit delay untuk efek visual

        // Tambahkan file yang baru diunggah ke daftar
        updateFileList(file.name);
      } else {
        alert('Upload failed.');
      }
    };

    xhr.onerror = function() {
      // Sembunyikan progress bar jika terjadi error
      progress.style.display = 'none';
      progressBar.style.width = '0%';
      progressBar.textContent = '0%';
      alert('Upload failed.');
    };

    xhr.send(formData);
  });
}

  // Fungsi untuk menambahkan file yang baru diunggah ke daftar
  function updateFileList(fileName) {
    const newFile = document.createElement('li');
    newFile.classList.add('list-group-item', 'd-flex', 'justify-content-between', 'align-items-center');
    newFile.innerHTML = `${fileName} <a href="/uploads/${fileName}" class="btn btn-secondary btn-sm" download>Download</a>`;
    fileList.appendChild(newFile);
    updateShowMore();
  }

  // Fungsi untuk menampilkan atau menyembunyikan tombol "Show More"
  function updateShowMore() {
    const files = fileList.getElementsByTagName('li');
    if (files.length > 3) {
      showMoreContainer.innerHTML = '<a href="/files" class="btn btn-primary">Show More</a>';
      showMoreContainer.style.display = 'block';
    } else {
      showMoreContainer.style.display = 'none';
    }
  }

  // Event listener untuk tombol upload
  uploadBtn.addEventListener('click', function(e) {
    if (fileInput.files.length === 0) {
      alert('Please select files to upload');
      return;
    }
    uploadFiles(fileInput.files);
  });

  // Panggil updateShowMore saat halaman dimuat untuk menangani refresh halaman
  document.addEventListener('DOMContentLoaded', updateShowMore);
});

  document.getElementById('show-more-btn').addEventListener('click', function() {
    window.location.href = '/files';
  });
  </script>
</body>
</html>